// <auto-generated />
using System;
using Calca.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Calca.Infrastructure.Migrations
{
    [DbContext(typeof(CalcaDbContext))]
    [Migration("20201121162020_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Calca.Domain.Accounting.Ledger", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Ledgers", "accounting");
                });

            modelBuilder.Entity("Calca.Domain.Accounting.LedgerMember", b =>
                {
                    b.Property<long>("LedgerId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LedgerId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("LedgerMembers", "accounting");
                });

            modelBuilder.Entity("Calca.Domain.Accounting.LedgerOperation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("LedgerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("LedgerId");

                    b.ToTable("LedgerOperations", "accounting");
                });

            modelBuilder.Entity("Calca.Domain.Accounting.OperationMember", b =>
                {
                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int>("Side")
                        .HasColumnType("int");

                    b.HasKey("OperationId", "UserId", "Side");

                    b.HasIndex("UserId");

                    b.ToTable("OperationMembers", "accounting");
                });

            modelBuilder.Entity("Calca.Domain.Users.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", "auth");
                });

            modelBuilder.Entity("Calca.Domain.Accounting.Ledger", b =>
                {
                    b.HasOne("Calca.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Calca.Domain.Accounting.LedgerMember", b =>
                {
                    b.HasOne("Calca.Domain.Accounting.Ledger", null)
                        .WithMany("Members")
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calca.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Calca.Domain.Accounting.LedgerOperation", b =>
                {
                    b.HasOne("Calca.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Calca.Domain.Accounting.Ledger", null)
                        .WithMany()
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Calca.Domain.Accounting.OperationMember", b =>
                {
                    b.HasOne("Calca.Domain.Accounting.LedgerOperation", null)
                        .WithMany("Members")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calca.Domain.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Calca.Domain.Accounting.Ledger", b =>
                {
                    b.Navigation("Members");
                });

            modelBuilder.Entity("Calca.Domain.Accounting.LedgerOperation", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
