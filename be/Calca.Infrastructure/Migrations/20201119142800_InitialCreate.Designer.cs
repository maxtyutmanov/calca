// <auto-generated />
using System;
using Calca.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Calca.Infrastructure.Migrations
{
    [DbContext(typeof(CalcaDbContext))]
    [Migration("20201119142800_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.LedgerDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("Version")
                        .IsConcurrencyToken()
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .IsClustered();

                    b.ToTable("Ledgers", "accounting");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.MemberDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<long>("LedgerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("LedgerId", "UserId")
                        .IsUnique();

                    b.ToTable("Members", "accounting");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.OperationDto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("LedgerId")
                        .HasColumnType("bigint");

                    b.HasKey("Id")
                        .IsClustered();

                    b.HasIndex("LedgerId");

                    b.ToTable("Operations", "accounting");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.OperationMemberDto", b =>
                {
                    b.Property<long>("OperationId")
                        .HasColumnType("bigint");

                    b.Property<long>("MemberId")
                        .HasColumnType("bigint");

                    b.Property<int>("Side")
                        .HasColumnType("int");

                    b.HasKey("OperationId", "MemberId", "Side")
                        .IsClustered();

                    b.HasIndex("MemberId");

                    b.ToTable("OperationMembers", "accounting");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.MemberDto", b =>
                {
                    b.HasOne("Calca.Infrastructure.Context.Dto.Accounting.LedgerDto", "Ledger")
                        .WithMany("Members")
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ledger");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.OperationDto", b =>
                {
                    b.HasOne("Calca.Infrastructure.Context.Dto.Accounting.LedgerDto", "Ledger")
                        .WithMany("Operations")
                        .HasForeignKey("LedgerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ledger");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.OperationMemberDto", b =>
                {
                    b.HasOne("Calca.Infrastructure.Context.Dto.Accounting.MemberDto", "Member")
                        .WithMany("Operations")
                        .HasForeignKey("MemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Calca.Infrastructure.Context.Dto.Accounting.OperationDto", "Operation")
                        .WithMany("Members")
                        .HasForeignKey("OperationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Operation");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.LedgerDto", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Operations");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.MemberDto", b =>
                {
                    b.Navigation("Operations");
                });

            modelBuilder.Entity("Calca.Infrastructure.Context.Dto.Accounting.OperationDto", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
